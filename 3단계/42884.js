function solution(routes) {
    let cam = 0;
    // 카메라를 설치하기전의 위치
    let camposition = -30001;
    // 차량의 경로를 끝나는 지점 기준으로 정렬
    routes.sort((a, b) => a[1] - b[1]);

    for (let route of routes) {
        // 현재 차량의 진입지점이 카메라 위치보다 크면 설치
        if (route[0] > camposition) {
            cam += 1;
            // 카메라를 현재 차량의 끝나는 지점에 설치
            camposition = route[1];
        }
    }
    return cam;
}


console.log(solution([[-20,-15], [-14,-5], [-18,-13], [-5,-3]]));


// 고속도로에 진입한 지점 -20, -18, -14, -5
// 고속도로에서 나간 지점 -15, -13, -5, -3


/**
 * routes에는 차량의 이동 경로가 포함되어 있으며 routes[i][0]에는 i번째 차량이 고속도로에 진입한 지점,
 * routes[i][1]에는 i번째 차량이 고속도로에서 나간 지점이 적혀 있습니다.
 */

/**
 * 처음 차량의 위치는 -20이 될거임 그래서 해당 차량이 나간 지점에 카메라를 설치함 -15
 * 두번째로 -18의 진입점에서 들어오지만 카메라의 위치는 -15이기 때문에 감지가능
 * 세번째로 -14의 진입점은 현재카메라위치(-15)보다 크기때문에 새로운 카메라를 설치해야함 그래서 해당 차량이 나간 지점에 카메라를 설치함 -5
 * 네번째로 -5의 진입점은 현재 카메라위치와 동일하기 때문에 카메라가 필요한 갯수는 2개
 */